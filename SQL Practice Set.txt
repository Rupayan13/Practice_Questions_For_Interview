1. Consider the following schema of a relational database:
Customer (cust-id, cust-name, annual-revenue, cust-type) [cust-id needs to maintain a sequence
starting from 100 and cust-type must be manufacturer, wholesaler, retailer or distributor]
Truck (truck-no, driver-name)
City (city-name, population)
Shipment (shipment-no, cust-id, weight, truck-no, start-city, destination-city). [start-city &
destination-city both refers to city-name of City table]
Create table through appropriate SQL commands. Define all integrity constraints and enter sufficient data.
Write SQL commands for the following queries.
a) Give the details for those shipments where the start-city and destination-city are same.
b) Give the driver names who participated in maximum numbers of shipments
c) Give the name of the city never appears in destination-city.
d) Give the name of the cities whose population is more the average of all the cities.
e) Give the shipment details where the starting character of customer name and the last character
of driver name is ‘A’; 

Solution:-

CREATE DATABASE shipping;
USE shipping;
CREATE TABLE customer(
    cust_id INT PRIMARY KEY,
    cust_name VARCHAR(50),
    annual_revenue INT
    cust_type VARCHAR(50)
);
CREATE TABLE truck(
    truck_no INT PRIMARY KEY,
    driver_name VARCHAR(50)
);
CREATE TABLE city(
    city_name VARCHAR(50) PRIMARY KEY,
    population INT
);
CREATE TABLE shipment(
    shipment_no INT PRIMARY KEY,
    cust_id INT,
    weight INT,
    truck_no INT,
    start_city VARCHAR(50),
    destination_city VARCHAR(50),
    FOREIGN KEY(start_city) REFERENCES city(city_name),
    FOREIGN KEY(destination_city) REFERENCES city(city_name)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

USE shipping;
INSERT INTO customer(cust_id, cust_name, annual_revenue, cust_type) VALUES 
(100, "Rupayan Dirghangi", 37500, "manufacturer"), 
(101, "Reshmi Dirghangi", 16870, "wholesaler"), 
(102, "Subhomoy Das", 12000, "retailer"), 
(103, "Aditya Routh", 37500, "manufacturer");

USE shipping;
INSERT INTO truck(truck_no, driver_name) VALUES 
(1, "Kalu"),
(2, "Malu");

USE shipping;
INSERT INTO city(city_name, population) VALUES 
("Kolkata", 56000),
("Mumbai", 80000),
("Delhi", 40000),
("Madras", 80000);

USE shipping;
INSERT INTO shipment(shipment_no, cust_id, weight, truck_no, start_city, destination_city) VALUES 
(1, 100, 20, 1, "Kolkata", "Madras"),
(2, 103, 20, 2, "Kolkata", "Mumbai"),
(3, 101, 40, 2, "Mumbai", "Mumbai");

a) USE shipping;
SELECT * FROM shipment WHERE start_city = destination_city;

b)USE shipping;
SELECT driver_name FROM truck WHERE truck_no IN (SELECT truck_no FROM shipment ORDER BY truck_no ASC);

c)USE shipping;
SELECT city_name FROM city WHERE city_name NOT IN (SELECT destination_city FROM shipment);

d)USE shipping;
SELECT city_name FROM city WHERE population > (SELECT AVG(population) FROM city);

e)USE shipping;
SELECT * FROM shipment WHERE cust_id IN (SELECT cust_id FROM customer WHERE cust_name="A%") AND truck_no IN (SELECT truck_no FROM truck WHERE driver_name="%A");


2. Consider the following schema of a relational database:
Employee (empno, emp_name, salary, hiredate, city)
Department (deptno, dname, city)
Manager (mgrno, deptno, manger_name, salary, hiredate,city)
Empmgr (empno, mgrno)

Create table through appropriate SQL commands. Define all integrity constraints and enter sufficient data.
Write SQL commands for the following queries.
a) Give the employee names who earn more than their manager.
b) Give the name of the managers who have no employee under his supervision from the same
city as of him.
c) Give the name of the manager who has maximum number of employees under his
supervision.
d) Give the name of the employees who have been hired in the year 2006.
e) Give the name of the city where no manager is located.

Solution:-

CREATE DATABASE employeement;
USE employeement;
CREATE TABLE Employee (
    empno INT PRIMARY KEY,
    emp_name VARCHAR(100) NOT NULL,
    salary DECIMAL(10, 2) NOT NULL,
    hiredate DATE NOT NULL,
    city VARCHAR(100) NOT NULL
);

USE employeement;
CREATE TABLE Department (
    deptno INT PRIMARY KEY,
    dname VARCHAR(100) NOT NULL,
    city VARCHAR(100) NOT NULL
);

USE employeement;
CREATE TABLE Manager (
    mgrno INT PRIMARY KEY,
    deptno INT,
    manager_name VARCHAR(100) NOT NULL,
    salary DECIMAL(10, 2) NOT NULL,
    hiredate DATE NOT NULL,
    city VARCHAR(100) NOT NULL,
    FOREIGN KEY (deptno) REFERENCES Department(deptno)
);

USE employeement;
CREATE TABLE Empmgr (
    empno INT,
    mgrno INT,
    PRIMARY KEY (empno, mgrno),
    FOREIGN KEY (empno) REFERENCES Employee(empno),
    FOREIGN KEY (mgrno) REFERENCES Manager(mgrno)
);



-- Insert sample data into Department table
INSERT INTO Department (deptno, dname, city) VALUES
(1, 'Human Resources', 'Metropolis'),
(2, 'Finance', 'Gotham'),
(3, 'IT', 'Star City'),
(4, 'Marketing', 'Central City');

-- Insert sample data into Employee table
INSERT INTO Employee (empno, emp_name, salary, hiredate, city) VALUES
(101, 'John Doe', 50000.00, '2020-01-15', 'Metropolis'),
(102, 'Jane Smith', 60000.00, '2019-03-22', 'Gotham'),
(103, 'Alice Brown', 55000.00, '2018-05-10', 'Star City'),
(104, 'Bob White', 70000.00, '2017-11-30', 'Central City'),
(105, 'Charlie Black', 52000.00, '2021-07-18', 'Metropolis');

-- Insert sample data into Manager table
INSERT INTO Manager (mgrno, deptno, manager_name, salary, hiredate, city) VALUES
(201, 1, 'George King', 80000.00, '2015-02-20', 'Metropolis'),
(202, 2, 'Nancy Queen', 85000.00, '2016-06-25', 'Gotham'),
(203, 3, 'Oliver Prince', 90000.00, '2014-09-15', 'Star City'),
(204, 4, 'Emma Duchess', 95000.00, '2013-12-05', 'Central City');

-- Insert sample data into Empmgr table
INSERT INTO Empmgr (empno, mgrno) VALUES
(101, 201),
(102, 202),
(103, 203),
(104, 204),
(105, 201);


a) USE employeement;
SELECT emp_name FROM Employee WHERE salary > (SELECT salary FROM Manager WHERE mgrno = ( SELECT mgrno FROM Empmgr WHERE empno = Employee.empno));

b) USE employeement;
SELECT manager_name FROM Manager WHERE city NOT IN (SELECT city FROM Employee WHERE empno IN ( SELECT empno FROM Empmgr WHERE mgrno = Manager.mgrno));

c) USE employeement;
SELECT manager_name FROM Manager WHERE mgrno = (SELECT mgrno
    FROM Empmgr
    GROUP BY mgrno
    ORDER BY COUNT(empno) DESC
    LIMIT 1);

d) USE employeement;
SELECT emp_name FROM Employee WHERE hiredate = "2006%";

e) USE employeement;
SELECT DISTINCT city FROM Department WHERE city NOT IN ( SELECT city FROM Manager);


3. Consider the following schema of a relational database:
Employee (empno, empname, city)
Project (pno, pname)
Part (partno, part name, color)
Use (pno, partno)
Works (empno,pno)
Create table through appropriate SQL commands. Define all integrity constraints and enter sufficient data.

 Write SQL commands for the following queries.
a) Give the name of the employees who are working on more than 1 project.
b) Give the name of the city where the maximum employees are located.
c) Give the part names, which are used in all the projects.
d) Give the name of the projects in which no employees are working whose name start with ‘S’.
e) Give the name of the project which use maximum red part
f) Give the name of the projects, which has used exactly 3 parts

Solution:-

CREATE DATABASE projects;

-- Creating Employee table
USE projects;
CREATE TABLE Employee (
    empno INT PRIMARY KEY,
    empname VARCHAR(100) NOT NULL,
    city VARCHAR(100)
);

-- Creating Project table
USE projects;
CREATE TABLE Project (
    pno INT PRIMARY KEY,
    pname VARCHAR(100) NOT NULL
);

-- Creating Part table
USE projects;
CREATE TABLE Part (
    partno INT PRIMARY KEY,
    partname VARCHAR(100) NOT NULL,
    color VARCHAR(50)
);

-- Creating Use table
USE projects;
CREATE TABLE Use (
    pno INT,
    partno INT,
    PRIMARY KEY (pno, partno),
    FOREIGN KEY (pno) REFERENCES Project(pno),
    FOREIGN KEY (partno) REFERENCES Part(partno)
);

-- Creating Works table
USE projects;
CREATE TABLE Works (
    empno INT,
    pno INT,
    PRIMARY KEY (empno, pno),
    FOREIGN KEY (empno) REFERENCES Employee(empno),
    FOREIGN KEY (pno) REFERENCES Project(pno)
);



-- Inserting data into Employee table
USE projects;
INSERT INTO Employee (empno, empname, city) VALUES
(1, 'John Doe', 'New York'),
(2, 'Jane Smith', 'Los Angeles'),
(3, 'Jim Brown', 'Chicago');

-- Inserting data into Project table
USE projects;
INSERT INTO Project (pno, pname) VALUES
(101, 'Project A'),
(102, 'Project B'),
(103, 'Project C');

-- Inserting data into Part table
USE projects;
INSERT INTO Part (partno, partname, color) VALUES
(1001, 'Part X', 'Red'),
(1002, 'Part Y', 'Blue'),
(1003, 'Part Z', 'Green');

-- Inserting data into Use table
USE projects;
INSERT INTO Use (pno, partno) VALUES
(101, 1001),
(102, 1002),
(103, 1003),
(101, 1003);

-- Inserting data into Works table
USE projects;
INSERT INTO Works (empno, pno) VALUES
(1, 101),
(2, 102),
(3, 103),
(1, 103);


a) USE projects;
SELECT empname FROM Employee WHERE empno IN (SELECT empno FROM Works GROUP BY empno HAVING COUNT(pno) > 1 );

b) USE projects;
SELECT city FROM Employee GROUP BY city ORDER BY COUNT(empno) DESC LIMIT 1;

c) 

d) USE projects;
SELECT pname FROM Project WHERE pno IN (SELECT pno FROM Works WHERE empno NOT IN (SELECT empno FROM Employee WHERE empname = "S%"));

e) USE projects;
SELECT pname FROM Project WHERE pno = (SELECT pno FROM Uses GROUP BY partno ORDER BY COUNT(pno) DESC LIMIT 1);

f) USE projects;
SELECT pname FROM Project WHERE pno IN (SELECT pno FROM Uses GROUP BY pno HAVING COUNT(partno)=3);

